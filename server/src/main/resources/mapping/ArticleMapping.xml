<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org//dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhumingbei.techblog.mapper.ArticleMapper">

    <resultMap id="ArticleMap" type="com.zhumingbei.techblog.bean.ArticleBean">
        <id column="id" property="id" />
        <result property="title" column="title" />
        <result property="content" column="content" />
        <result property="html" column="html" />
        <result property="summary" column="summary" />
        <result property="summaryImage" column="summary_image" />
        <result property="authorID" column="author_id" />
        <result property="collectedNums" column="collected_nums" />
        <result property="likedNums" column="liked_nums" />
        <result property="commentNums" column="comment_nums" />
        <result property="isDeleted" column="is_deleted" />
        <result property="isPublished" column="is_published" />
        <result property="thumbsTime" column="thumbs_time_format" />
        <result property="collectedTime" column="collected_time_format" />
        <result property="updatedTime" column="updated_time_format" />
        <result property="createdTime" column="created_time_format" />
        <association property="author" column="author_id"  resultMap="AuthorMap" />
        <collection property="comments" ofType="com.zhumingbei.techblog.bean.CommentBean">
            <id property="id" column="comment_id" />
            <result property="content" column="comment_content" />
            <result property="updatedTime" column="comment_time_format" />
        </collection>
    </resultMap>


    <resultMap id="AuthorMap" type="com.zhumingbei.techblog.bean.UserBean">
        <id property="id" column="author_id" />
        <result property="username" column="username"/>
        <result property="avatar" column="avatar" />
    </resultMap>
    <select id="selectAll" resultMap="ArticleMap">
        select a.id, a.title, a.content, a.html, a.summary, a.summary_image, a.liked_nums, a.collected_nums, a.comment_nums, a.is_published, a.is_deleted, date_format(a.updated_time, '%Y-%m-%d %H:%i:%s') as updated_time_format, date_format(a.created_time, '%Y-%m-%d %H:%i:%s') as created_time_format, a.author_id, u.username, u.avatar
        from article a
        inner join user u on u.id = a.author_id
        where is_deleted = 0 and a.is_published = 1
        order by a.updated_time desc
        limit #{offset}, #{limit}
    </select>

    <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="articleBean">
        insert into article (title, content, html, summary, summary_image, author_id, is_published) values(#{title}, #{content}, #{html}, #{summary}, #{summaryImage}, #{authorID}, #{isPublished})
    </insert>

    <select id="selectByIds" resultMap="ArticleMap">
        select a.id, a.title, a.content, a.html, a.summary, a.summary_image, a.liked_nums, a.collected_nums, a.comment_nums, a.is_published, a.is_deleted, date_format(a.updated_time, '%Y-%m-%d %H:%i:%s') as updated_time_format, date_format(a.created_time, '%Y-%m-%d %H:%i:%s') as created_time_format, a.author_id, u.username, u.avatar
        from article a
        inner join user u on u.id = a.author_id
        where a.id = #{articleID} and a.author_id = #{userID} and a.is_deleted = 0;
    </select>
    <select id="selectByID" resultMap="ArticleMap">
        select a.id, a.title, a.content, a.html, a.summary, a.summary_image, a.liked_nums, a.collected_nums, a.comment_nums, a.is_published, a.is_deleted, date_format(a.updated_time, '%Y-%m-%d %H:%i:%s') as updated_time_format, date_format(a.created_time, '%Y-%m-%d %H:%i:%s') as created_time_format, a.author_id, u.username, u.avatar
        from article a
        inner join user u on u.id = a.author_id
        where a.id = #{articleID} and a.is_deleted = 0;
    </select>
    <select id="selectPublishedByID" resultMap="ArticleMap">
        select a.id, a.title, a.content, a.html, a.summary, a.summary_image, a.liked_nums, a.collected_nums, a.comment_nums, a.is_published, a.is_deleted, date_format(a.updated_time, '%Y-%m-%d %H:%i:%s') as updated_time_format, date_format(a.created_time, '%Y-%m-%d %H:%i:%s') as created_time_format, a.author_id, u.username, u.avatar
        from article a
        inner join user u on u.id = a.author_id
        where a.id = #{articleID} and a.is_deleted = 0 and a.is_published = 1;
    </select>
    <select id="count" resultType="int">
        select count(id)
        from article a
        where a.author_id = #{authorID} and a.is_deleted = 0
        <if test="search != null"> and a.title like '%${search}%'</if>
    </select>
    <select id="selectAllInOneUser" resultMap="ArticleMap">
        select a.id, a.title, a.content, a.html, a.summary, a.summary_image, a.liked_nums, a.collected_nums, a.comment_nums, a.is_published, a.is_deleted, date_format(a.updated_time, '%Y-%m-%d %H:%i:%s') as updated_time_format, date_format(a.created_time, '%Y-%m-%d %H:%i:%s') as created_time_format, a.author_id
        from article a
        inner join user u on u.id = a.author_id
        where a.author_id = #{authorID} and a.is_deleted = 0
        <if test="search !=null"> and a.title like '%${search}%'</if>
        order by a.${sort} ${order}
        limit #{offset}, #{limit}
    </select>
    <select id="selectPublishedInOneUser" resultMap="ArticleMap">
        select a.id, a.title, a.content, a.html, a.summary, a.summary_image, a.liked_nums, a.collected_nums, a.comment_nums, a.is_published, a.is_deleted, date_format(a.updated_time, '%Y-%m-%d %H:%i:%s') as updated_time_format, date_format(a.created_time, '%Y-%m-%d %H:%i:%s') as created_time_format, a.author_id
        from article a
        inner join user u on u.id = a.author_id
        where a.author_id = #{userID} and a.is_deleted = 0 and is_published = 1
        order by a.updated_time desc;
    </select>
    <select id="selectDraftInOneUser" resultMap="ArticleMap">
        select a.id, a.title, a.content, a.html, a.summary, a.summary_image, a.liked_nums, a.collected_nums, a.comment_nums, a.is_published, a.is_deleted,
        date_format(a.updated_time, '%Y-%m-%d %H:%i:%s') as updated_time_format, date_format(a.created_time, '%Y-%m-%d %H:%i:%s') as created_time_format,
        a.author_id
        from article a
        inner join user u on u.id = a.author_id
        where a.author_id = #{userID} and a.is_deleted = 0 and is_published = 0;
    </select>
    <select id="selectThumbsArticles" resultMap="ArticleMap">
        select a.id, a.title, a.content, a.html, a.summary, a.summary_image, a.liked_nums, a.collected_nums, a.comment_nums, a.is_published, a.is_deleted,
        date_format(a.updated_time, '%Y-%m-%d %H:%i:%s') as updated_time_format,
        date_format(a.created_time, '%Y-%m-%d %H:%i:%s') as created_time_format,
        date_format(la.updated_time, '%Y-%m-%d %H:%i:%s') as thumbs_time_format,
        a.author_id,
        u.username, u.avatar
        from article a
        inner join user u on u.id = a.author_id
        inner join liked_article la on la.user_id = #{userID} and la.article_id = a.id
        where a.is_deleted = 0 and a.is_published = 1 and la.is_liked = 1
        <if test="search != null">and ( a.title like '%${search}%' or u.username like '%${search}%' )</if>
        order by la.updated_time desc
        limit #{offset}, #{limit}
    </select>
    <select id="selectCollectedArticles" resultMap="ArticleMap">
        select a.id, a.title, a.content, a.html, a.summary, a.summary_image, a.liked_nums, a.collected_nums, a.comment_nums, a.is_published, a.is_deleted,
        date_format(a.updated_time, '%Y-%m-%d %H:%i:%s') as updated_time_format,
        date_format(a.created_time, '%Y-%m-%d %H:%i:%s') as created_time_format,
        date_format(c.updated_time, '%Y-%m-%d %H:%i:%s') as collected_time_format,
        a.author_id,
        u.username, u.avatar
        from article a
        inner join user u on u.id = a.author_id
        inner join collection c on c.user_id = #{userID} and c.article_id = a.id
        where a.is_deleted = 0 and a.is_published = 1 and c.is_collected = 1
        <if test="search != null">and ( a.title like '%${search}%' or u.username like '%${search}%' )</if>
        order by c.updated_time desc
        limit #{offset}, #{limit}
    </select>
    <select id="countThumbs" resultType="int">
        select count(a.id)
        from article a
        inner join user u on u.id = a.author_id
        inner join liked_article la on la.user_id = #{userID} and la.article_id = a.id
        where a.is_deleted = 0 and a.is_published = 1 and la.is_liked = 1
        <if test="search != null">and ( a.title like '%${search}%' or u.username like '%${search}%' )</if>
    </select>
    <select id="countCollectedArticles" resultType="int" >
        select count(a.id)
        from article a
        inner join user u on u.id = a.author_id
        inner join collection c on c.user_id = #{userID} and c.article_id = a.id
        where a.is_deleted = 0 and a.is_published = 1 and c.is_collected = 1
        <if test="search != null">and (a.title like '%${search}%' or u.username like '%${search}%' )</if>
    </select>
    <select id="selectCommentArticles" resultMap="ArticleMap">
        select a.id, a.title, a.content, a.html, a.summary, a.summary_image, a.liked_nums, a.collected_nums, a.comment_nums, a.is_published, a.is_deleted,
        date_format(a.updated_time, '%Y-%m-%d %H:%i:%s') as updated_time_format,
        date_format(a.created_time, '%Y-%m-%d %H:%i:%s') as created_time_format,
        a.author_id,
        u.username, u.avatar,
        c.id as comment_id,
        c.content as comment_content,
        date_format(c.updated_time, '%Y-%m-%d %H:%i:%s') as comment_time_format
        from article a
        inner join user u on u.id = a.author_id
        inner join comment c on c.user_id = #{userID} and c.article_id = a.id
        where a.is_deleted = 0 and a.is_published = 1 and c.is_deleted = 0
        <if test="search != null">and ( a.title like '%${search}%' or u.username like '%${search}%' or c.content like '%${search}%' )</if>
        order by c.updated_time desc
        limit #{offset}, #{limit}
    </select>
    <select id="countCommentArticles" resultType="int">
        select count(a.id)
        from article a
        inner join user u on u.id = a.author_id
        inner join comment c on a.id = c.article_id
        where c.user_id = #{userID} and c.is_deleted = 0
        <if test="search != null">and (a.title like '%${search}%' or u.username like '%${search}%' or c.content like '%${search}%')</if>
    </select>
    <update id="update" parameterType="ArticleBean">
        update article
        <trim prefix="set" suffixOverrides=",">
            <if test="title != null">title = #{title},</if>
            <if test="content != null">content =#{content},</if>
            <if test="html !=null">html = #{html},</if>
            <if test="summary !=null">summary = #{summary},</if>
            <if test="summaryImage !=null">summary_image = #{summaryImage},</if>
            <if test="likedNums != null">liked_nums = #{likedNums},</if>
            <if test="commentNums != null">comment_nums = #{commentNums},</if>
            <if test="collectedNums != null">collected_nums = #{collectedNums},</if>
            <if test="isPublished != null">is_published = #{isPublished},</if>
            <if test="isDeleted != null">is_deleted = #{isDeleted},</if>
        </trim>
        where id = #{id}
    </update>
</mapper>